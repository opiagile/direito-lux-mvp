apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-service-config
  namespace: direito-lux-staging
data:
  SERVER_PORT: "8080"
  ENVIRONMENT: "staging"
  LOG_LEVEL: "info"
  DB_HOST: "postgres-service"
  DB_PORT: "5432"
  DB_NAME: "direito_lux_staging"
  DB_USER: "direito_lux"
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  RABBITMQ_HOST: "rabbitmq-service"
  RABBITMQ_PORT: "5672"
  RABBITMQ_USER: "guest"
  RABBITMQ_VHOST: "/"
  RABBITMQ_EXCHANGE: "direito_lux.events"
  RABBITMQ_QUEUE: "auth-service.events"
  JWT_ALGORITHM: "HS256"
  JWT_EXPIRATION_MINUTES: "60"
  JAEGER_ENABLED: "true"
  JAEGER_AGENT_HOST: "jaeger"
  JAEGER_AGENT_PORT: "6831"
  PROMETHEUS_ENABLED: "true"
  PROMETHEUS_PORT: "9090"
---
apiVersion: v1
kind: Secret
metadata:
  name: auth-service-secret
  namespace: direito-lux-staging
type: Opaque
data:
  DB_PASSWORD: ZGV2X3Bhc3N3b3JkXzEyMw== # dev_password_123 base64 encoded
  REDIS_PASSWORD: ZGV2X3JlZGlzXzEyMw== # dev_redis_123 base64 encoded
  RABBITMQ_PASSWORD: Z3Vlc3Q= # guest base64 encoded
  JWT_SECRET_KEY: ZGV2X2p3dF9zZWNyZXRfa2V5XzEyMw== # dev_jwt_secret_key_123 base64 encoded
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: direito-lux-staging
  labels:
    app: auth-service
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
        tier: backend
    spec:
      containers:
      - name: auth-service
        image: ghcr.io/your-org/direito-lux-auth-service:latest
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: SERVER_PORT
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: LOG_LEVEL
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: auth-service-secret
              key: DB_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: auth-service-secret
              key: REDIS_PASSWORD
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: auth-service-secret
              key: JWT_SECRET_KEY
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: direito-lux-staging
  labels:
    app: auth-service
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: metrics
  selector:
    app: auth-service
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-service-hpa
  namespace: direito-lux-staging
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# Production namespace resources
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-service-config
  namespace: direito-lux-production
data:
  SERVER_PORT: "8080"
  ENVIRONMENT: "production"
  LOG_LEVEL: "warn"
  DB_HOST: "postgres-service"
  DB_PORT: "5432"
  DB_NAME: "direito_lux_production"
  DB_USER: "direito_lux"
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  RABBITMQ_HOST: "rabbitmq-service"
  RABBITMQ_PORT: "5672"
  RABBITMQ_USER: "admin"
  RABBITMQ_VHOST: "/"
  RABBITMQ_EXCHANGE: "direito_lux.events"
  RABBITMQ_QUEUE: "auth-service.events"
  JWT_ALGORITHM: "HS256"
  JWT_EXPIRATION_MINUTES: "30"
  JAEGER_ENABLED: "true"
  JAEGER_AGENT_HOST: "jaeger"
  JAEGER_AGENT_PORT: "6831"
  PROMETHEUS_ENABLED: "true"
  PROMETHEUS_PORT: "9090"
---
apiVersion: v1
kind: Secret
metadata:
  name: auth-service-secret
  namespace: direito-lux-production
type: Opaque
data:
  DB_PASSWORD: cHJvZF9wYXNzd29yZF8xMjM= # prod_password_123 base64 encoded
  REDIS_PASSWORD: cHJvZF9yZWRpc18xMjM= # prod_redis_123 base64 encoded
  RABBITMQ_PASSWORD: cHJvZF9yYWJiaXRfMTIz # prod_rabbit_123 base64 encoded
  JWT_SECRET_KEY: cHJvZF9qd3Rfc2VjcmV0X2tleV8xMjM= # prod_jwt_secret_key_123 base64 encoded
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: direito-lux-production
  labels:
    app: auth-service
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
        tier: backend
    spec:
      containers:
      - name: auth-service
        image: ghcr.io/your-org/direito-lux-auth-service:latest
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: SERVER_PORT
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: LOG_LEVEL
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: auth-service-secret
              key: DB_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: auth-service-secret
              key: REDIS_PASSWORD
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: auth-service-secret
              key: JWT_SECRET_KEY
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: direito-lux-production
  labels:
    app: auth-service
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: metrics
  selector:
    app: auth-service
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-service-hpa
  namespace: direito-lux-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth-service
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80