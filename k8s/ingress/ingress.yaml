apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: direito-lux-ingress
  namespace: direito-lux-staging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/rate-limit-rpm: "300"
    nginx.ingress.kubernetes.io/rate-limit-burst-multiplier: "3"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - staging.direitolux.com
    - api-staging.direitolux.com
    secretName: direito-lux-staging-tls
  rules:
  # Frontend
  - host: staging.direitolux.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 3000
  
  # API Gateway
  - host: api-staging.direitolux.com
    http:
      paths:
      # Auth Service
      - path: /auth(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: auth-service
            port:
              number: 8080
      
      # Tenant Service
      - path: /tenants(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: tenant-service
            port:
              number: 8080
      
      # Process Service
      - path: /processes(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: process-service
            port:
              number: 8080
      
      # AI Service
      - path: /ai(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: ai-service
            port:
              number: 8000
      
      # Search Service
      - path: /search(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: search-service
            port:
              number: 8080
      
      # Notification Service
      - path: /notifications(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 8080
      
      # Report Service
      - path: /reports(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: report-service
            port:
              number: 8080
      
      # MCP Service
      - path: /mcp(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: mcp-service
            port:
              number: 8080
      
      # DataJud Service
      - path: /datajud(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: datajud-service
            port:
              number: 8080
      
      # Health check endpoint
      - path: /health
        pathType: Exact
        backend:
          service:
            name: auth-service
            port:
              number: 8080
---
# Production Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: direito-lux-ingress
  namespace: direito-lux-production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://app.direitolux.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/rate-limit-rpm: "1000"
    nginx.ingress.kubernetes.io/rate-limit-burst-multiplier: "5"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - app.direitolux.com
    - api.direitolux.com
    secretName: direito-lux-production-tls
  rules:
  # Frontend
  - host: app.direitolux.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 3000
  
  # API Gateway
  - host: api.direitolux.com
    http:
      paths:
      # Auth Service
      - path: /auth(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: auth-service
            port:
              number: 8080
      
      # Tenant Service
      - path: /tenants(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: tenant-service
            port:
              number: 8080
      
      # Process Service
      - path: /processes(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: process-service
            port:
              number: 8080
      
      # AI Service
      - path: /ai(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: ai-service
            port:
              number: 8000
      
      # Search Service
      - path: /search(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: search-service
            port:
              number: 8080
      
      # Notification Service
      - path: /notifications(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 8080
      
      # Report Service
      - path: /reports(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: report-service
            port:
              number: 8080
      
      # MCP Service
      - path: /mcp(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: mcp-service
            port:
              number: 8080
      
      # DataJud Service
      - path: /datajud(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: datajud-service
            port:
              number: 8080
      
      # Health check endpoint
      - path: /health
        pathType: Exact
        backend:
          service:
            name: auth-service
            port:
              number: 8080
---
# Cert Manager ClusterIssuer for Let's Encrypt
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: devops@direitolux.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx