#!/bin/bash

# üîê Setup R√°pido GitHub Secrets - Direito Lux
# Configura√ß√£o autom√°tica de todos os secrets necess√°rios

set -e

# Cores
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${BLUE}"
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë    üîê GITHUB SECRETS - SETUP R√ÅPIDO              ‚ïë"
echo "‚ïë    Direito Lux - Staging & Production Ready      ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"

# Verificar se est√° no diret√≥rio correto
if [ ! -f "docker-compose.yml" ]; then
    echo -e "${RED}‚ùå Execute na raiz do projeto Direito Lux${NC}"
    exit 1
fi

# Verificar GitHub CLI
if ! command -v gh &> /dev/null; then
    echo -e "${RED}‚ùå GitHub CLI n√£o encontrado${NC}"
    echo "Instale: brew install gh"
    exit 1
fi

# Verificar autentica√ß√£o
if ! gh auth status &> /dev/null; then
    echo -e "${YELLOW}üîë Fazendo login no GitHub...${NC}"
    gh auth login --web
fi

echo -e "${GREEN}‚úÖ GitHub CLI autenticado${NC}"
echo ""

# Coletar secrets
echo -e "${BLUE}üìã Configure os secrets necess√°rios:${NC}"
echo ""

# Telegram (obrigat√≥rio)
echo -e "${YELLOW}1. ü§ñ TELEGRAM BOT TOKEN (obrigat√≥rio):${NC}"
echo "Token atual: 7927061803:AAGC5GMerAe9CVegcl85o6BTFj2hqkcjO04"
read -p "Usar token atual? (y/n): " use_current_telegram
if [ "$use_current_telegram" = "y" ]; then
    TELEGRAM_TOKEN="7927061803:AAGC5GMerAe9CVegcl85o6BTFj2hqkcjO04"
else
    read -s -p "Digite novo Telegram Bot Token: " TELEGRAM_TOKEN
    echo ""
fi

# WhatsApp (opcional)
echo ""
echo -e "${YELLOW}2. üì± WHATSAPP ACCESS TOKEN (opcional):${NC}"
read -p "Configurar WhatsApp agora? (y/n): " configure_whatsapp
if [ "$configure_whatsapp" = "y" ]; then
    read -s -p "WhatsApp Access Token: " WHATSAPP_TOKEN
    echo ""
    read -p "WhatsApp Phone Number ID: " WHATSAPP_PHONE_ID
    read -p "WhatsApp Business Account ID (opcional): " WHATSAPP_BUSINESS_ID
fi

# OpenAI (opcional)  
echo ""
echo -e "${YELLOW}3. ü§ñ OPENAI API KEY (opcional):${NC}"
read -p "Configurar OpenAI? (y/n): " configure_openai
if [ "$configure_openai" = "y" ]; then
    read -s -p "OpenAI API Key: " OPENAI_KEY
    echo ""
fi

# Anthropic (opcional)
echo ""
echo -e "${YELLOW}4. üß† ANTHROPIC API KEY (opcional):${NC}"
read -p "Configurar Anthropic? (y/n): " configure_anthropic
if [ "$configure_anthropic" = "y" ]; then
    read -s -p "Anthropic API Key: " ANTHROPIC_KEY
    echo ""
fi

# Email
echo ""
echo -e "${YELLOW}5. üìß EMAIL SMTP PASSWORD:${NC}"
echo "Email: contato@direitolux.com.br"
read -s -p "SMTP Password: " SMTP_PASSWORD
echo ""

# Configurar secrets no GitHub
echo ""
echo -e "${BLUE}üöÄ Configurando secrets no GitHub...${NC}"

# Secrets obrigat√≥rios
gh secret set TELEGRAM_BOT_TOKEN --body "$TELEGRAM_TOKEN"
echo -e "${GREEN}‚úÖ TELEGRAM_BOT_TOKEN configurado${NC}"

gh secret set SMTP_PASSWORD --body "$SMTP_PASSWORD"
echo -e "${GREEN}‚úÖ SMTP_PASSWORD configurado${NC}"

# WhatsApp (se configurado)
if [ "$configure_whatsapp" = "y" ]; then
    gh secret set WHATSAPP_ACCESS_TOKEN --body "$WHATSAPP_TOKEN"
    gh secret set WHATSAPP_PHONE_NUMBER_ID --body "$WHATSAPP_PHONE_ID"
    if [ ! -z "$WHATSAPP_BUSINESS_ID" ]; then
        gh secret set WHATSAPP_BUSINESS_ACCOUNT_ID --body "$WHATSAPP_BUSINESS_ID"
    fi
    echo -e "${GREEN}‚úÖ WhatsApp secrets configurados${NC}"
fi

# OpenAI (se configurado)
if [ "$configure_openai" = "y" ]; then
    gh secret set OPENAI_API_KEY --body "$OPENAI_KEY"
    echo -e "${GREEN}‚úÖ OPENAI_API_KEY configurado${NC}"
fi

# Anthropic (se configurado)
if [ "$configure_anthropic" = "y" ]; then
    gh secret set ANTHROPIC_API_KEY --body "$ANTHROPIC_KEY"
    echo -e "${GREEN}‚úÖ ANTHROPIC_API_KEY configurado${NC}"
fi

# Secrets de infraestrutura (valores padr√£o seguros)
gh secret set DB_PASSWORD --body "direito_lux_prod_$(openssl rand -hex 8)"
gh secret set RABBITMQ_PASSWORD --body "rabbit_prod_$(openssl rand -hex 8)"

echo -e "${GREEN}‚úÖ Secrets de infraestrutura configurados${NC}"

# Listar secrets configurados
echo ""
echo -e "${BLUE}üìä Secrets configurados no GitHub:${NC}"
gh secret list

echo ""
echo -e "${GREEN}üéâ GITHUB SECRETS CONFIGURADO COM SUCESSO!${NC}"
echo ""
echo -e "${YELLOW}üìã PR√ìXIMOS PASSOS:${NC}"
echo "1. üöÄ Push para main ‚Üí Deploy autom√°tico"
echo "2. üì± Configure WhatsApp API (se n√£o fez ainda)"
echo "3. üí∞ Configure payment gateways (ASAAS/NOWPayments)"
echo "4. üèõÔ∏è Configure DataJud CNJ (certificado digital)"
echo ""
echo -e "${BLUE}üîó LINKS √öTEIS:${NC}"
echo "‚Ä¢ Repository: $(gh repo view --web --json url -q .url)"
echo "‚Ä¢ Actions: $(gh repo view --web --json url -q .url)/actions"
echo "‚Ä¢ Secrets: $(gh repo view --web --json url -q .url)/settings/secrets/actions"
echo ""
echo -e "${YELLOW}üìñ Documenta√ß√£o: CONFIGURAR_GITHUB_SECRETS.md${NC}"

# Teste opcional
echo ""
read -p "üß™ Executar teste de valida√ß√£o? (y/n): " run_test
if [ "$run_test" = "y" ]; then
    echo ""
    echo -e "${BLUE}üß™ Testando configura√ß√£o...${NC}"
    
    # Exportar vari√°veis para teste local
    export TELEGRAM_BOT_TOKEN="$TELEGRAM_TOKEN"
    export SMTP_PASSWORD="$SMTP_PASSWORD"
    
    if [ "$configure_whatsapp" = "y" ]; then
        export WHATSAPP_ACCESS_TOKEN="$WHATSAPP_TOKEN"
    fi
    
    # Verificar se servi√ßos inicializam
    echo "Testando configura√ß√£o do notification service..."
    if docker-compose config | grep -q "notification-service"; then
        echo -e "${GREEN}‚úÖ Docker Compose configura√ß√£o v√°lida${NC}"
    else
        echo -e "${RED}‚ùå Problema na configura√ß√£o Docker Compose${NC}"
    fi
    
    echo -e "${GREEN}‚úÖ Teste de configura√ß√£o conclu√≠do${NC}"
fi

echo ""
echo -e "${GREEN}üîê GITHUB SECRETS TOTALMENTE OPERACIONAL!${NC}"