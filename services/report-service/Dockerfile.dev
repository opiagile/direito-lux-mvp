FROM golang:1.21-alpine AS base

# Install air for hot reload
RUN go install github.com/cosmtrek/air@v1.40.4

# Install build dependencies
RUN apk add --no-cache \
    build-base \
    git \
    curl

# Set working directory
WORKDIR /app

# Copy go mod files first for better caching
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Create air config
RUN echo 'root = "." \n\
testdata_dir = "testdata" \n\
tmp_dir = "tmp" \n\
\n\
[build] \n\
  bin = "./tmp/main" \n\
  cmd = "go build -mod=mod -o ./tmp/main cmd/server/main.go" \n\
  delay = 1000 \n\
  exclude_dir = ["assets", "tmp", "vendor", "testdata"] \n\
  exclude_file = [] \n\
  exclude_regex = [] \n\
  exclude_unchanged = false \n\
  follow_symlink = false \n\
  full_bin = "" \n\
  include_dir = [] \n\
  include_ext = ["go", "tpl", "tmpl", "html"] \n\
  include_file = [] \n\
  kill_delay = "0s" \n\
  log = "build-errors.log" \n\
  send_interrupt = false \n\
  stop_on_root = false \n\
\n\
[color] \n\
  app = "" \n\
  build = "yellow" \n\
  main = "magenta" \n\
  runner = "green" \n\
  watcher = "cyan" \n\
\n\
[log] \n\
  time = false \n\
\n\
[misc] \n\
  clean_on_exit = false' > .air.toml

EXPOSE 8087

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8087/health || exit 1

CMD ["air", "-c", ".air.toml"]